[
{
	"uri": "https://anadeap.github.io/dwes/fr/introduccion/",
	"title": "Introduction au développement web",
	"tags": [],
	"description": "",
	"content": "SECTION 1 Introduction au développement web Cette section fait une brève introduction au développement Web\n Concepts généraux du développement Web Architecture et technologie Web Processus de chargement des pages Web Installation de ressources Outils et technologies Web  "
},
{
	"uri": "https://anadeap.github.io/dwes/fr/introduccion/conceptos_generales/",
	"title": "1.1 Concepts généraux du développement Web",
	"tags": [],
	"description": "",
	"content": "Pièces à analyser:\n Développer une application Applications Web Environnement serveur  Développer une application Il consiste à implémenter ou à construire un programme en utilisant un certain langage de programmation. Ledit programme consiste en un ensemble d\u0026rsquo;instructions qui s\u0026rsquo;exécutent dans un environnement de calcul résolvent de manière automatisée le problème posé. Les instructions écrites doivent être converties en code machine. Ils peuvent être compilés ou interprétés pour ce faire.\nDes applications Web Caractéristiques  Le client est le navigateur (une application s\u0026rsquo;exécutant sur une machine avec une ip) qui demande une ressource. Démarrez le processus. Le serveur est une application qui répond aux demandes qui entrent par un port et délivrent la ressource demandée. Les applications Web utilisent une architecture Client/Serveur  Environnement serveur  Le serveur reçoit et interprète la requête du client. Accéder aux bases de données selon les besoins. Exécuter du code sur le serveur, générant ainsi une page html qui l\u0026rsquo;envoie au client. Le client ne voit pas le code serveur.  "
},
{
	"uri": "https://anadeap.github.io/dwes/fr/introduccion/arquitectura_web/",
	"title": "1.2 Architecture et technologie Web",
	"tags": [],
	"description": "",
	"content": " L\u0026rsquo;architecture web est la structure de notre produit final. C\u0026rsquo;est l\u0026rsquo;organisation du code. Il émerge tout au long de son développement. Vous devez décider au début quels outils ou technologies utiliser.\n  Couches d\u0026rsquo;une application web:\n Couche d\u0026rsquo;accès aux données: stocke les informations de l\u0026rsquo;application dans une base de données.\nCouche intermédiaire: programme les fonctionnalités de l\u0026rsquo;application.\nCouche client: comprend tout ce qui concerne l\u0026rsquo;interface utilisateur, la partie visible.\n  Composants d\u0026rsquo;une application Web:  Un serveur Web pour recevoir les requêtes des clients Web.   Un serveur web est un logiciel chargé de recevoir une requête sur le réseau. Dans un réseau de type TCP/IP, la requête est reçue via le protocole http. Répondre à cette requête implique de vérifier les autorisations, d\u0026rsquo;exécuter le script\u0026hellip; Et générer un message de réponse, normalement une page html, en utilisant le protocole http.  Un serveur de base de données   Le serveur de base de données se trouve généralement sur un serveur spécifique à cet effet.  Un module d\u0026rsquo;exécution de code sur le serveur   Génère la page Web résultante. Il est nécessaire d\u0026rsquo;avoir un module installé sur le serveur qui exécute le code avant d\u0026rsquo;envoyer la réponse au client.  Un client   Démarre le processus. Il s\u0026rsquo;agit généralement d\u0026rsquo;un navigateur. Recevez la réponse du serveur. Interpréter les balises html et appliquer le style CSS Exécutez le code JavaScript  Langages de programmation   Nécessaire côté client et côté serveur.  Technologies Web  Ce sont des outils utilisés pour l\u0026rsquo;architecture\n Exemples: "
},
{
	"uri": "https://anadeap.github.io/dwes/fr/introduccion/carga_web/",
	"title": "1.3 Processus de chargement des pages Web",
	"tags": [],
	"description": "",
	"content": "1. L\u0026rsquo;utilisateur saisit une URL dans le client (navigateur).\n2. Le navigateur recherche l'IP :\n D\u0026rsquo;abord dans le cache du navigateur Deuxièmement, dans le cache du système d\u0026rsquo;exploitation Troisièmement, dans le cache du routeur Quatrièmement, dans le cache du FAI  S\u0026rsquo;il ne peut pas trouver l\u0026rsquo;adresse IP, le serveur DNS du FAI lance une requête pour trouver l\u0026rsquo;adresse IP du serveur sur lequel le nom de domaine est hébergé. La demande est envoyée en petit paquets de données contenant des informations sur le contenu de la demande et l\u0026rsquo;adresse IP.\n3. Le navigateur initie une connexion TCP/IP au serveur à l\u0026rsquo;aide de messages de synchronisation (SYN) et d\u0026rsquo;accusé de réception (ACK).\n4. Le client envoie une requête HTTP.\nLe protocole HTTPS implique un autre protocole appelé TLS qui fournit l\u0026rsquo;authentification et le cryptage (le navigateur crypte une pré-clé générée à ce moment avec la clé publique du serveur auquel nous voulons nous connecter. Celle-ci est envoyée au serveur, qui décrypte la pré-clé avec sa clé privée. key - Cryptographie asymétrique : un message crypté avec une clé ne peut être crypté qu\u0026rsquo;avec sa paire correspondante.Le serveur et le navigateur appliquent un certain algorithme à la pré-clé et obtiennent la même clé de cryptage -).\n5. Si la requête aboutit, le serveur envoie la réponse.\n5.1 Dans les sites Web statiques, le serveur envoie le contenu de la page en HTML.\nSur les sites Web dynamiques, les scripts peuvent être exécutés :\n5.2 Programmation côté client:\nUne fois que le navigateur a téléchargé la page, il détecte le code dans le code HTML que le serveur envoie et l\u0026rsquo;exécute (dans le navigateur ou en tant que programme séparé en dehors du navigateur). Par exemple, le navigateur exécute JavaScript à l\u0026rsquo;intérieur du HTML, traite les balises HTML et applique les styles CSS. Parsing : si nécessaire, demander des ressources au serveur.\n5.3 Programmation côté serveur:\nLe serveur, généralement en langage PHP, interprète le script, insère le HTML généré par le code directement dans la page web puis l\u0026rsquo;envoie au client. Il effectue également des requêtes dans la Base de données.\n6. Le navigateur traite le DOM et construit la page, en combinant les informations trouvées dans les données du serveur (le fichier HTML d\u0026rsquo;origine) et dans les ressources.\nSi vous avez besoin d\u0026rsquo;une requête vers la base de données, afin de ne pas charger une autre page, vous pouvez utiliser la technologie AJAX qui permet à JavaScript d\u0026rsquo;envoyer des requêtes aux scripts PHP. JavaScript reçoit des chaînes de texte en tant que réponse et, en fonction de la réponse, vous pouvez dessiner de nouveaux éléments GUI ou les modifier.\n** 7 **. Le moteur de rendu du navigateur est déterminant lors de l\u0026rsquo;interprétation des lignes de code. C\u0026rsquo;est pourquoi il existe des différences dans l\u0026rsquo;affichage d\u0026rsquo;une page dans différents navigateurs\ngraph LR; A[CLIENT 1-2] --|TCP/IP| B(SERVEUR 3-4) B -- C{5} C --|5.1| D[CLIENT 6-7] C --|5.2| E[CLIENT 6-7] C --|5.3| F[CLIENT 6-7]  "
},
{
	"uri": "https://anadeap.github.io/dwes/fr/introduccion/instalacion/",
	"title": "1.4 Installation des ressources",
	"tags": [],
	"description": "",
	"content": "Ressources nécessaires au développement Web en environnement serveur**   Installation des ressources   Installation des ressources.pdf (424 ko)     Java PhpStorm Apache Php e intérprete de Php Mysql - cliente y servidor XDebug  Java PhpStorm Apache Php e intérprete de Php Mysql (cliente y servidor) XDebug "
},
{
	"uri": "https://anadeap.github.io/dwes/fr/introduccion/herramientas_web/",
	"title": "1.5 Outils et technologies Web",
	"tags": [],
	"description": "",
	"content": "TECHNOLOGIES WEB  PHP: langage open source particulièrement adapté au développement web et pouvant être embarqué en HTML  PHP   JavaScript (JS): langage de programmation multiplateforme, prototypé, interprété, impératif, structuré, avec prise en charge de la programmation orientée objet  JavaScript   CSS (Cascading Style Sheets): langage de conception graphique pour définir et créer la présentation d\u0026rsquo;un document structuré rédigé dans un langage de balisage. Il est largement utilisé pour établir la conception visuelle de documents Web  CSS   JSP (Java Server Pages): technologie visant à créer des pages web avec programmation Java. Vous pouvez créer des applications Web qui s\u0026rsquo;exécutent sur divers serveurs Web, sur plusieurs plates-formes  JSP   JQuery: bibliothèque JavaScript multiplateforme qui simplifie la façon dont vous interagissez avec les documents HTML. C\u0026rsquo;est un logiciel gratuit et open source  JQuery    FRAMEWORKS  Angular: facilite le développement d\u0026rsquo;applications web SPA ; front-end et back-end séparés dans une application Web  Angular   React: bibliothèque JavaScript open source axée sur le développement d\u0026rsquo;interfaces utilisateurs. L\u0026rsquo;extrémité avant. Facilite le développement et la planification d\u0026rsquo;applications complexes  React   Bootstrap: framework pour CSS et JavaScript, front-end. Il permet de créer des interfaces utilisateur propres et entièrement adaptables à tous types d\u0026rsquo;appareils et d\u0026rsquo;écrans, quelle que soit leur taille.  Bootstrap   Prototype: pour le développement d\u0026rsquo;applications web avec JavaScript et AJAX  Prototype   Vue: framework frontal JavaScript pour la création d\u0026rsquo;interfaces utilisateur et d\u0026rsquo;applications monopages  Vue   Django: framework écrit en Python, back-end. Il permet le développement rapide de sites Web sûrs et maintenables. C\u0026rsquo;est gratuit et open source  Django   Frameworks php: plateformes de création d\u0026rsquo;applications web php. Ils fournissent des bibliothèques de code, réduisant la quantité de code d\u0026rsquo;origine. Laravel: framework php. Permet le développement d\u0026rsquo;applications Web de haute qualité et entièrement personnalisées  Laravel   Hugo: cadre écrit au go. C\u0026rsquo;est un constructeur de site Web statique très rapide  Hugo   Gatsby: framework, générateur de site statique  Gatsby   Jekyll: Générateur simple de sites Web statiques avec des capacités de blogs ; adapté aux sites Web personnels, de projet ou d\u0026rsquo;organisation  Jekyll   Pelican: générateur de site statique, écrit en Python  Pelican    OUTILS WEB  TypeScript: langage de programmation qui transforme le code en JavaScript, transpiler front-end  TypeScript   Babel: compilateur JavaScript. Transpileur de code ES6 + vers ES5  Babel   Scraping: technique utilisée pour extraire des informations des pages web de manière automatisée. Simule la navigation d\u0026rsquo;un humain  Scraping   Heroku : plateforme de service cloud computing (PaaS) qui permet de déployer des applications sans se soucier de l\u0026rsquo;infrastructure. Prend en charge plusieurs langages de programmation  Heroku   Webpack : package de module statique pour JavaScript. Compiler et compresser des fichiers avec des dépendances vers des fichiers js  Webpack   Polyfill: extrait de code ou plugin, en JavaScript, utilisé pour fournir des fonctionnalités modernes dans les anciens navigateurs qui ne le prennent pas en charge  Polyfill   Sass: transpileur pour CSS, très puissant. Vous devez avoir installé ruby  Sass    "
},
{
	"uri": "https://anadeap.github.io/dwes/fr/estatico/",
	"title": "Générateur de sites statiques hugo",
	"tags": [],
	"description": "",
	"content": "SECTION 2 GÉNÉRATEUR DE SITES STATIQUES hugo Cette section concerne ** hugo **, qui est un framework de générateur de site statique\n Théorie Pratique  "
},
{
	"uri": "https://anadeap.github.io/dwes/fr/estatico/teoria/",
	"title": "2.1 Théorie hugo",
	"tags": [],
	"description": "",
	"content": " Installation d\u0026rsquo;Hugo Thèmes - Themes Ajouter du contenu Shortcodes Personnaliser le modèle Multilingue Propre disposition personnalisé Données externes - Chaínes de téle  "
},
{
	"uri": "https://anadeap.github.io/dwes/fr/estatico/teoria/instalacion_hugo/",
	"title": "Installation hugo",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://anadeap.github.io/dwes/fr/estatico/teoria/temas/",
	"title": "Thèmes - Themes",
	"tags": [],
	"description": "",
	"content": "Thèmes (themes) disponibles dans hugo Themes de hugo  "
},
{
	"uri": "https://anadeap.github.io/dwes/fr/estatico/teoria/contenido/",
	"title": "Ajouter du contenu",
	"tags": [],
	"description": "",
	"content": "Ajouter du contenu aux pages\n Pour ajouter du contenu, vous devez générer des pages de texte au format markdown\n Création de pages de contenu Il est important de bien établir l\u0026rsquo;organisation du contenu\n Créer des répertoires de chapitres ou de sections. Vous pouvez inclure un fichier _index.md Créez des fichiers de contenu avec la commande hugo new section_name / file_name.md Les fichiers sont créés dans le dossier ** content ** du répertoire racine du site Les sections ou chapitres ont un contenu par défaut spécifié dans archetypes/chapitre.md Les fichiers ont un contenu par défaut spécifié dans archetypes / default.md Chaque fichier créé a le front matter au début, enfermé entre deux blocs de 3 lignes - - - Les taxonomies vous permettent de classer le contenu. Par défaut, hugo ajoute les taxonomies categories et tags  "
},
{
	"uri": "https://anadeap.github.io/dwes/fr/estatico/teoria/shortcodes/",
	"title": "Shortcodes",
	"tags": [],
	"description": "",
	"content": "EXEMPLES DE SHORTCODES  Un shortcode est un extrait de code html qui sera rendu dans un fichier md lorsque le système chargera ou affichera la page de contenu\n  Buttons\nBouton qui renvoie au site Web d\u0026rsquo;Hugo\n Le site d\u0026rsquo;hugo     Attachments - pages de téléchargement    Pages Emplacement des pièces jointes     md dans le répertoire avec le même nom de page et se terminant par .files   annuaire dans un répertoire de fichiers imbriqués        Attachments   Attachments documentation.pdf (69 ko)     Raccourcir un texte avec Lire la suite\u0026hellip; Cliquez sur le texte pour développer   Hugo est l\u0026#39;un des générateurs de sites statiques open source les plus populaires.   Avec sa vitesse et sa flexibilité incroyables, Hugo rend la création de sites Web amusante à nouveau.     Textes surlignés\nNouvelles Nouvelles\n Informations Informations\n Avis Avis\n    Tabs de différents éléments\nTrès utile pour fournir des extraits de code pour plusieurs langues ou fournir des paramètres dans différents formats json XML properties  { \u0026#34;Hello\u0026#34;: \u0026#34;World\u0026#34; }   \u0026lt;Hello\u0026gt;World\u0026lt;/Hello\u0026gt;   Hello = World        Lien vers une vidéo youtube\n    "
},
{
	"uri": "https://anadeap.github.io/dwes/fr/estatico/teoria/personalizar_plantilla/",
	"title": "Personnaliser la disposition",
	"tags": [],
	"description": "",
	"content": "Parties d\u0026rsquo;un modéle 1. LOGO\n logo.html se trouve dans themes/layouts/partials Pour personnaliser le logo, copiez le fichier dans mon_site/layouts/partials Créer en statique un dossier - images - et à l\u0026rsquo;intérieur coller un logo.png Référencez-le dans logo.html    2. MENU\n Dans la mise en page learn, le menu est situé sur le côté gauche Pour ajouter/modifier, il faut le préciser dans config.toml, en ajoutant les éléments [[menu.shortcuts]]  The titre du menu est défini en /i18n/fr.toml pour la langue francais   3. STYLE\n learn a 3 styles de couleurs différents Pour les utiliser, vous devez définir la valeur dans la variable themeVariant dans le fichier config.toml Les valeurs autorisées sont red, green, blue Vous pouvez également créer des fichiers css et les charger. Par exemple, pour définir une couleur d\u0026rsquo;arrière-plan de menu autre que les couleurs par défaut :   Copier themes/learn/static/css/theme-blue.css dans un fichier theme-dwes.css situé dans static/css\nL\u0026rsquo;estable themeVariant = \u0026ldquo;dwes\u0026rdquo;\n  4. BOUTON DE SEARCH\n Il peut être modifié à partir de theme-dwes.css 5. HOME Il est modifié dans config.toml, en modifiant les paramètres au sein d\u0026rsquo;une section de langue   5. FOOTER\n Pour le modifier, copiez menu-footer.html dans layouts / partials  "
},
{
	"uri": "https://anadeap.github.io/dwes/fr/estatico/teoria/multilenguaje/",
	"title": "Multilingue",
	"tags": [],
	"description": "",
	"content": "Définir différentes langues dans hugo 1. Modifier config.toml  2. Vous pouvez définir une langue par défaut  3. Changer la page par défaut\n Vous devez définir le contenu de la page par défaut dans les langues Dans learn, s\u0026rsquo;il n\u0026rsquo;y a pas de contenu dans \u0026ldquo;content\u0026rdquo;, ce contenu est dans le fichier index.html, situé dans themes / learn / layouts Ce modèle est préparé pour l\u0026rsquo;anglais et le français, vous devez donc ajouter une structure de contrôle pour inclure une autre langue   4. Modification des valeurs via des variables\n Les mots peuvent être spécifiés pour être traduits Dans i18n, les 2 premières lettres des fichiers identifient la langue Ces fichiers sont traduits et le système obtient la valeur du fichier, en utilisant la fonction de traduction de hugo    5. Menus en plusieurs langues\n Définir dans config.toml :   [Languages] [Languages.fr] ... [[Languages.fr.menu.shortcuts]]  6. Ajout de pages traduites\n Une façon de préciser les traductions est de nommer chaque fichier correspondant à une page référençant les langues\n fichier.es.md fichier.en.md fichier.fr.md  Dans config.toml, indiquez, avec la variable ContentDir, le répertoire où se trouvent les fichiers traduits dans la langue :   [Languages] [Languages.fr] ... ContentDir = \u0026quot;content\u0026quot; "
},
{
	"uri": "https://anadeap.github.io/dwes/fr/estatico/teoria/plantilla_propia/",
	"title": "Propre disposition personnalisé",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://anadeap.github.io/dwes/fr/estatico/teoria/datos_externos/",
	"title": "Chaínes de téle",
	"tags": [],
	"description": "",
	"content": "Consommer des données à partir de fichiers structurés\nLISTE DES CHAINES DE TV ESPAGNOLES  "
},
{
	"uri": "https://anadeap.github.io/dwes/fr/estatico/practica/",
	"title": "2.2 Hugo pratique",
	"tags": [],
	"description": "",
	"content": "Faire la pratique suivante avec hugo "
},
{
	"uri": "https://anadeap.github.io/dwes/fr/",
	"title": "DWES Francais",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://anadeap.github.io/dwes/fr/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://anadeap.github.io/dwes/fr/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]